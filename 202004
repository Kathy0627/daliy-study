4.11
变量和数据类型
原型和原型链
ES6/7/8  symbol、class
4.13
js线程、消息队列和事件循环、宏任务与微任务
观察者模式：当对象间存在一对多关系时，则使用观察者模式（Observer Pattern）。比如，当一个对象被修改时，则会自动通知它的依赖对象。观察者模式属于行为型模式。
比如一个典型的场景是监控 DOM 节点的变化情况（节点的插入、修改、删除等动态变化），然后根据这些变化来处理相应的业务逻辑

通常我们把消息队列中的任务称为宏任务，消息队列是一种数据结构，可以存放要执行的任务。每个宏任务中都包含了一个微任务队列。
在执行宏任务的过程中，如果 DOM 有变化，那么就会将该变化添加到微任务列表中，这样就不会影响到宏任务的继续执行，因此也就解决了执行效率的问题。
等宏任务中的主要功能都直接完成之后，这时候，渲染引擎并不着急去执行下一个宏任务，而是执行当前宏任务中的微任务，
因为 DOM 变化的事件都保存在这些微任务队列中，这样也就解决了实时性问题。
很好的参考：
https://juejin.im/post/5c2ec3b66fb9a049eb3c1012
http://ddrv.cn/a/434421


必须会的list
1.手写promise
2.instanceof实现原理
3.es6常用方法
4.数组常用方法
5.快速排序



